### Выполняем в корне проекта ###

virtualenv venv
source /venv/bin/activate

pip3 install Django mysqlclient
pip3 freeze > requirements.txt

django-admin startproject [PROJECT_NAME]
(поменял немного архитектуру так, чтобы manage.py был в корне, а все остальное внутри PROJECT_NAME)
cd PROJECT_NAME
python ../manage.py startapp [APP_NAME]



### Создаем Dockerfile ###

FROM python:3.6

ENV PYTHONUNBUFFERED 1

RUN mkdir /app
WORKDIR /app

ADD requirements.txt /app/
RUN pip install --upgrade pip && pip install -r requirements.txt

ADD . /app/




### Создаем docker-compose.yaml ###

version: '3'

services:
  db:
    image: mysql:5.7
    ports:
      - '3306:3306'
    environment:
       MYSQL_DATABASE: 'db_name'
       MYSQL_USER: 'root'
       MYSQL_PASSWORD: 'password'
       MYSQL_ROOT_PASSWORD: 'password'
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/[APP_NAME]
    ports:
      - "8000:8000"
    depends_on:
      - db
    expose: 
        - "8000"



### В settings.py настраиваем БД ###

Для деплоя пишем это:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'db_name',
        'USER': 'root',
        'PASSWORD': 'password',
        'HOST': 'db',
        'PORT': 3306,
    }
}

Для локальной разработки создаем в корне файл db.sqlite3

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


docker-compose build
docker-compose up -d

docker-compose run web python manage.py migrate
docker-compose run web python manage.py createsuperuser


* Разработка приложения *